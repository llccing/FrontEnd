(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{410:function(a,e,t){"use strict";t.r(e);var s=t(14),i=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"result"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#result"}},[a._v("#")]),a._v(" Result")]),a._v(" "),e("ul",[e("li",[a._v("Failed: 64%")]),a._v(" "),e("li",[a._v("Time: 1h 9m")])]),a._v(" "),e("h2",{attrs:{id:"_1-23-amazon-cognito-user-pools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-23-amazon-cognito-user-pools"}},[a._v("#")]),a._v(" 1/23 Amazon Cognito user pools")]),a._v(" "),e("p",[a._v("Which is a user directory for web and mobile app authentication and authorization.")]),a._v(" "),e("h2",{attrs:{id:"_2-23-s3-event-notification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-23-s3-event-notification"}},[a._v("#")]),a._v(" 2/23 S3 Event Notification")]),a._v(" "),e("p",[a._v("With S3 Event Notification, you don't need SQS or SNS to trigger Lambda functions.")]),a._v(" "),e("h2",{attrs:{id:"_3-23-amazon-kinesis-firehose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-23-amazon-kinesis-firehose"}},[a._v("#")]),a._v(" 3/23 Amazon Kinesis Firehose")]),a._v(" "),e("p",[a._v("The correct AWS service to use for the scenario you described is "),e("strong",[a._v("Amazon Kinesis Firehose")]),a._v(" (B). Here's why:")]),a._v(" "),e("ol",[e("li",[e("p",[e("strong",[a._v("Real-time Data Ingestion")]),a._v(": Amazon Kinesis Firehose is designed for real-time data ingestion, which is crucial for tracking high scores in a video game where multiple players are scoring simultaneously.")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Reliable and Scalable")]),a._v(": Kinesis Firehose allows you to easily collect and process large streams of data in real time, making it suitable for applications that rely on up-to-date information from millions of players.")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Stream Processing")]),a._v(": Kinesis allows for various types of streaming and processing of data. In this case, it would effectively facilitate the integration of real-time scores into the datastore.")])])]),a._v(" "),e("p",[a._v("In contrast, here’s a brief overview of the other options:")]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[a._v("AWS Data Pipeline")]),a._v(" (A): It's more oriented towards batch processing of data, not real-time ingestion.")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Amazon DynamoDB Streams")]),a._v(" (C): While it allows capturing changes to items in a DynamoDB table, it doesn't handle real-time ingestion from external sources directly.")])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Amazon Elasticsearch Service")]),a._v(" (D): This is primarily used for search and analytics. It is not a direct ingestion service but can receive data from Kinesis or other sources.")])])]),a._v(" "),e("p",[a._v("So, Kinesis Firehose is best suited for this specific requirement of real-time data ingestion from a video game application.")]),a._v(" "),e("h2",{attrs:{id:"_4-23-alb-sqs-asg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-23-alb-sqs-asg"}},[a._v("#")]),a._v(" 4/23 ALB, SQS, ASG")]),a._v(" "),e("p",[a._v("don't need to use spare CPU available of instance. just use instances of ASG to read from the SQS queue.")]),a._v(" "),e("h2",{attrs:{id:"_5-23-using-lambda-function-to-access-an-amazon-rds-database"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-23-using-lambda-function-to-access-an-amazon-rds-database"}},[a._v("#")]),a._v(" 5/23 Using Lambda function to access an Amazon RDS database")]),a._v(" "),e("p",[a._v("you use a Lambda function to write data to an Amazon Relational Database Service (Amazon RDS) database through RDS Proxy. Your Lambda function reads records from an Amazon Simple Queue Service (Amazon SQS) queue and writes a new item to a table in your database whenever a message is added.")]),a._v(" "),e("ul",[e("li",[a._v("RDS does not support VPC endpoint.")])]),a._v(" "),e("h2",{attrs:{id:"_6-23-dynamodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-23-dynamodb"}},[a._v("#")]),a._v(" 6/23 DynamoDB")]),a._v(" "),e("p",[a._v("It's a Key-Value and document database. while Aurora is a MySQL and PostgreSQL-compatible relational database.")]),a._v(" "),e("h2",{attrs:{id:"_7-23-asg-does-not-span-across-regions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-23-asg-does-not-span-across-regions"}},[a._v("#")]),a._v(" 7/23 ASG does not span across regions.")]),a._v(" "),e("p",[a._v("six frontend web servers, 3 in one AZ, 3 in another AZ.")]),a._v(" "),e("h2",{attrs:{id:"_8-23-waf-and-shield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-23-waf-and-shield"}},[a._v("#")]),a._v(" 8/23 WAF and Shield")]),a._v(" "),e("p",[a._v("WAF is a web application firewall.")]),a._v(" "),e("p",[a._v("Shield is a DDoS protection service.")]),a._v(" "),e("h2",{attrs:{id:"_9-23-iam-role"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-23-iam-role"}},[a._v("#")]),a._v(" 9/23 IAM role")]),a._v(" "),e("ul",[e("li",[a._v("IAM role is a virtual identity that you can assign to an AWS resource, such as an EC2 instance.")])]),a._v(" "),e("h2",{attrs:{id:"_10-23-kinesis-streams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-23-kinesis-streams"}},[a._v("#")]),a._v(" 10/23 Kinesis Streams")]),a._v(" "),e("p",[a._v("SQS FIFO is a queue that delivers messages in order. but the deal rate is 300 messages per second and 3000 with batching. so the message cannot be consumed at a high rate.")]),a._v(" "),e("p",[a._v("Kinesis Streams is a real-time data streaming service. It can deliver messages at a high rate.")]),a._v(" "),e("h2",{attrs:{id:"_11-23-ec2-sqs-asg-base-on-queue-depth-write-data-to-rds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-23-ec2-sqs-asg-base-on-queue-depth-write-data-to-rds"}},[a._v("#")]),a._v(" 11/23 EC2, SQS, ASG base on queue depth, write data to RDS.")]),a._v(" "),e("p",[a._v("API Gateway does not write directly to SQS queue and would need Lambda or other compute services.")]),a._v(" "),e("h2",{attrs:{id:"_12-23-you-cannot-enable-encryption-after-redshift-cluster-is-launched"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-23-you-cannot-enable-encryption-after-redshift-cluster-is-launched"}},[a._v("#")]),a._v(" 12/23 you cannot enable encryption after Redshift cluster is launched.")]),a._v(" "),e("h2",{attrs:{id:"_13-23-origin-access-identity-oai-for-cloudfront-and-restrict-viewer-access-option-and-signed-urls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-23-origin-access-identity-oai-for-cloudfront-and-restrict-viewer-access-option-and-signed-urls"}},[a._v("#")]),a._v(" 13/23 Origin Access Identity OAI for CloudFront and Restrict Viewer Access option and signed URLs.")]),a._v(" "),e("h2",{attrs:{id:"_14-23-efs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-23-efs"}},[a._v("#")]),a._v(" 14/23 EFS")]),a._v(" "),e("p",[a._v("It is designed to provide massively parallel shared access to thousands of Amazon EC2 instances.")]),a._v(" "),e("p",[a._v("AWS Storage Gateway - Volume gateway, is a hybrid cloud storage service that connects your existing on-premises environments with the AWS Cloud.")]),a._v(" "),e("h2",{attrs:{id:"_15-23-efs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-23-efs"}},[a._v("#")]),a._v(" 15/23 EFS")]),a._v(" "),e("p",[a._v("FSx for lustre can not currently support by Fargate. So use EFS.")]),a._v(" "),e("h2",{attrs:{id:"_16-23-peering-connection-and-nat-gateway"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-23-peering-connection-and-nat-gateway"}},[a._v("#")]),a._v(" 16/23 Peering connection and NAT gateway")]),a._v(" "),e("ul",[e("li",[a._v("VPC to VPC, use peering connection.")]),a._v(" "),e("li",[a._v("VPC to Third-party services, use NAT gateway.")])]),a._v(" "),e("h2",{attrs:{id:"_17-23-organizations-service-control-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-23-organizations-service-control-policy"}},[a._v("#")]),a._v(" 17/23 Organizations Service Control Policy")]),a._v(" "),e("p",[a._v("Service control policies (SCPs) are a type of organization policy that you can use to manage permissions in your organization. SCPs offer central control over the maximum available permissions for the IAM users and IAM roles in your organization. SCPs help you to ensure your accounts stay within your organization’s access control guidelines. SCPs are available only in an organization that has all features enabled. SCPs aren't available if your organization has enabled only the consolidated billing features.")]),a._v(" "),e("h2",{attrs:{id:"_18-23-api-gateway-and-lambda"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-23-api-gateway-and-lambda"}},[a._v("#")]),a._v(" 18/23 API Gateway and Lambda")]),a._v(" "),e("p",[a._v("In the scenario you've provided, a team is tasked with redesigning the application layer of their Software as a Service (SaaS) solution with an emphasis on serverless architecture and automatic scaling.")]),a._v(" "),e("p",[a._v("Let's break down each option:")]),a._v(" "),e("p",[a._v("A. "),e("strong",[a._v("Amazon API Gateway and AWS Lambda")]),a._v(": This is a common serverless architecture. "),e("strong",[a._v("AWS Lambda")]),a._v(" allows you to run code in response to events without provisioning servers, while "),e("strong",[a._v("Amazon API Gateway")]),a._v(" can handle incoming API requests and route them to your Lambda functions. This pairing is generally ideal for applications requiring automatic scaling.")]),a._v(" "),e("p",[a._v("B. "),e("strong",[a._v("Amazon Cognito and Amazon DynamoDB")]),a._v(": "),e("strong",[a._v("Amazon Cognito")]),a._v(" is focused on user authentication and management, while "),e("strong",[a._v("DynamoDB")]),a._v(" is a NoSQL database service. Although both are part of the AWS toolkit, this combination doesn't directly address the requirement for an application layer designed around serverless execution and request handling.")]),a._v(" "),e("p",[a._v("C. "),e("strong",[a._v("Amazon DynamoDB and AWS CodeDeploy")]),a._v(": "),e("strong",[a._v("DynamoDB")]),a._v(" is again involved as the database solution, but "),e("strong",[a._v("AWS CodeDeploy")]),a._v(" is primarily for deploying code to EC2 instances or serverless backends. This choice also doesn't align with the serverless needs of the application layer.")]),a._v(" "),e("p",[a._v("D. "),e("strong",[a._v("AWS Lambda and an Application Load Balancer")]),a._v(": While "),e("strong",[a._v("AWS Lambda")]),a._v(" is indeed a serverless component, an "),e("strong",[a._v("Application Load Balancer")]),a._v(" is typically used for distributing incoming application traffic across multiple targets (like EC2 instances). It may not fully align with a purely serverless model as you might deploy Lambda functions behind an API Gateway instead.")]),a._v(" "),e("p",[a._v("The most appropriate answer is generally "),e("strong",[a._v("A")]),a._v(" (Amazon API Gateway and AWS Lambda) when considering standard serverless architecture that needs to scale automatically and handle variable request volumes. Thus, if you chose "),e("strong",[a._v("D")]),a._v(" as your answer, it may not have met the core requirement of being entirely serverless in the application layer (as the Application Load Balancer introduces a level of management and server-based scaling).")]),a._v(" "),e("p",[a._v("Therefore, the reason your answer was marked incorrect is because option A better fits the specific needs of the scenario provided.")]),a._v(" "),e("h2",{attrs:{id:"_19-23-weighted-routing-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-23-weighted-routing-policy"}},[a._v("#")]),a._v(" 19/23 Weighted Routing policy")]),a._v(" "),e("p",[a._v("when Blue-Green deployment, use weighted routing policy.")]),a._v(" "),e("h2",{attrs:{id:"_20-23-cloudtrail-with-data-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-23-cloudtrail-with-data-events"}},[a._v("#")]),a._v(" 20/23 CloudTrail with data events.")]),a._v(" "),e("p",[a._v("CloudTrail with management events does not provide granular audit logging.")]),a._v(" "),e("h2",{attrs:{id:"_21-23-configure-the-database-security-group-to-allow-database-traffic-from-the-applicatoin-server-security-group"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_21-23-configure-the-database-security-group-to-allow-database-traffic-from-the-applicatoin-server-security-group"}},[a._v("#")]),a._v(" 21/23 Configure the database security group to allow database traffic from the applicatoin server security group.")]),a._v(" "),e("p",[a._v("ACLs  are stateless and the ACLs should be configured on Web and DB subnet to allow outgoing and incoming traffic to each other.")]),a._v(" "),e("h2",{attrs:{id:"_22-23-how-can-i-encrypt-an-unencrypted-amazon-rds-db-instance-for-mysql-or-mariadb-with-minimal-downtime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_22-23-how-can-i-encrypt-an-unencrypted-amazon-rds-db-instance-for-mysql-or-mariadb-with-minimal-downtime"}},[a._v("#")]),a._v(" 22/23 How can I encrypt an unencrypted Amazon RDS DB instance for MySQL or MariaDB with minimal downtime?")]),a._v(" "),e("ul",[e("li",[a._v("Create a snapshot of the unencrypted DB instance.")]),a._v(" "),e("li",[a._v("Restore the encrypted DB instance from the snapshot.")]),a._v(" "),e("li",[a._v("Modify the DB instance to use the new encryption.")])]),a._v(" "),e("h2",{attrs:{id:"_23-23-athena-and-s3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_23-23-athena-and-s3"}},[a._v("#")]),a._v(" 23/23 Athena and S3")]),a._v(" "),e("p",[a._v("Athena is a serverless query service that makes it easy to analyze data in Amazon S3 using standard SQL.")])])}),[],!1,null,null,null);e.default=i.exports}}]);